#!/usr/bin/env python

# Project: MalwareLab
# Author: HomardBoy
# Starting date: 31/03/2019

import sys
import json
import hashlib
import urllib
import json
import urllib2
from functions import *

if len(sys.argv) < 2:
    print("Usage: python " + str(sys.argv[0]) + " <malware_path>")
    exit(1)

# Intro
print("MalwareLab Project")
print("Version: 0.0.1 - dev")
print("Author: H0m4rdB0y")
print("")
print("Launching MalwareLab ...")

# Variables regarding the uplaoded sample
malware_path = sys.argv[1]
File_Exist(malware_path)
malware_hash = hashlib.md5(open(malware_path,'rb').read()).hexdigest()

# Testing the conf file values
print("Loading the configuration file ...")

global_infos = Generic_PE_infos(malware_path)
size = str(global_infos[0]).replace("\n","")
type_m = str(global_infos[1]).replace("\n","") 
actual_date = datetime.today().strftime('%Y-%m-%d')

print("")
print("Md5: " + str(malware_hash))
print("Size: " + size)
print("Type: " + type_m)
print("")

Insert_to_BDD(malware_path, malware_hash, size, type_m)
Update_BDD('size', str(size), str(malware_hash))
Update_BDD('upload_date', str(actual_date), str(malware_hash))

Get_PE_details(malware_path, malware_hash)

Load_Conf_Value("VIRUSTOTAL_KEY")
Load_Conf_Value("VIRUSTOTAL_AV")
Load_Conf_Value("YARA_PACKER_PEID")
Load_Conf_Value("YARA_PACKER_GENERIC")
Load_Conf_Value("YARA_GENERAL_INFOS")
Load_Conf_Value("YARA_CRYPTO")
Load_Conf_Value("YARA_ANTI_VM_DEBUG")
Load_Conf_Value("YARA_MALWARE_DIR")

# Get the conf file content
vt_api_key = Get_Option_From_Conf_File("VIRUSTOTAL_KEY")
av_list = Get_Option_From_Conf_File("VIRUSTOTAL_AV")
yara_packer_peid_path = Get_Option_From_Conf_File("YARA_PACKER_PEID")
yara_packer_generic_path = Get_Option_From_Conf_File("YARA_PACKER_GENERIC")
yara_packer_sig_path = Get_Option_From_Conf_File("YARA_GENERAL_INFOS")
yara_crypto = Get_Option_From_Conf_File("YARA_CRYPTO")
yara_debug = Get_Option_From_Conf_File("YARA_ANTI_VM_DEBUG")
yara_malware_dir = Get_Option_From_Conf_File("YARA_MALWARE_DIR") 
Check_VirusTotal_Hash(vt_api_key, malware_hash, av_list)
print("")

# Generic infos about the file
packer_sig = Yara_scan(malware_path, yara_packer_sig_path)
crypto = Yara_scan(malware_path, yara_crypto)
debug = Yara_scan(malware_path, yara_debug) 
packer_peid = Yara_scan(malware_path, yara_packer_peid_path)
packer_generic = Yara_scan(malware_path, yara_packer_generic_path)
malware_result = Yara_scan_malware(malware_path, yara_malware_dir)

Update_BDD("packer_peid", str(packer_peid), str(malware_hash))
Update_BDD("packer", str(packer_generic), str(malware_hash))
Update_BDD("crypto", str(crypto).replace(",","|"), str(malware_hash))
Update_BDD("general_infos", str(packer_sig).replace(",","|"), str(malware_hash))
Update_BDD("antivm_debug", str(debug).replace(",","|"), str(malware_hash))

print("General infos: " + str(packer_sig))
print("PEID packer: " + str(packer_peid))
print("Generic packer: " + str(packer_generic))
print("Crypto artefact: " + str(crypto))
print("AntiVM / Debug: " + str(debug))
print("")

elem_array = ""
# Don't know how to deal with the newline added after each new subprocess.Popen call
# That's freaking ugly, but it work :)
while("" in malware_result):
    malware_result.remove("")
for elems in malware_result:
    print("Additional infos: " + str(elems))
    if elem_array != "":
        elem_array = str(elem_array) + "|"  + str(elems)
    else:
        elem_array = str(elems)
Update_BDD("additional", str(elem_array), str(malware_hash))
